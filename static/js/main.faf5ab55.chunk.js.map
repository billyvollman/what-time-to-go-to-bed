{"version":3,"sources":["Activities.js","AddActivities.js","Clock.js","App.js","serviceWorker.js","index.js"],"names":["Activities","props","data","name","time","AddActivities","state","showAddActivities","handleNewActivityTitle","e","console","log","target","value","setState","handleNewActivityTime","displayAddActivityInputClick","hideForm","handleAdd","onAdd","handleNo","onNo","this","className","onChange","type","onClick","React","Component","Clock","currentDay","moment","format","currentTime","timeNow","currentHrs","currentMins","currentSecs","hrs","hour","mins","minute","secs","seconds","timeHrs","timeMins","timeSecs","update","setInterval","toString","padStart","clearInterval","MapContainer","startLocation","finalDestination","newActivityTitle","newActivityTime","travelTime","activities","visibleStartLocation","visibleFinalDestination","hideAndDisplayStartAndEndLocation","amountOfSleepWanted","sleepHrs","sleepMins","hideAndDisplaySleepAmount","finalDestinationHrs","finalDestinationMins","whatTimeYouNeedToBeSomewhere","whatTimeYouNeedToBeSomewhereDisplay","hideAndDisplayFinalDestTime","hideAndDisplayBedTime","timeForBed","hideAndDisplaySectionContainer","amountSleepSection","whereNeedToBeSection","timeNeedToBeAtFinalDest","activitiesSection","moreActivitiesSection","calculateBedTimeSection","handleAddTravelDestination","google","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","region","response","status","rows","elements","duration","text","split","length","travelDuration","Number","handleStartLocationChange","handleFinalDestinationChange","addActivityClick","timeToNumber","noActivityClick","preventDefault","handleFigureoutTimeForBed","activitiesAndTravelTime","map","activity","reduce","accum","currentVal","timeYouHaveToBeAtAPlace","set","wakeUpTime","subtract","gotToBedTime","handleSleepHrsChange","sleepHrsToNumber","handleSleepMinsChange","sleepMinsToNumber","handleAmountOfSleep","hrsAndMinsCombined","handleFinalDestinationHrsChange","finalDestinationHrsToNumber","handleFinalDestinationMinsChange","finalDestinationMinsToNumber","handleArrivalTime","finalDestHrsAndMinsCombined","test","key","min","GoogleApiWrapper","apiKey","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf5ab55.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Activities(props) {\n    return (\n        <div>{props.data.name} <div>{props.data.time}</div> </div>\n    )\n}","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport './AddActivities.css'\n\nexport default class AddActivities extends React.Component {\n\n    state = {\n        showAddActivities: false,\n        name: '',\n        time: '',\n      }\n\n    handleNewActivityTitle = e => {\n        console.log(e.target.value)\n        this.setState({\n          name: e.target.value\n        })\n    }\n    \n    handleNewActivityTime = e => {\n        console.log(e.target.value)\n        this.setState({\n            time: e.target.value\n        })\n    }\n    \n    displayAddActivityInputClick = e => {\n        console.log('working')\n        this.setState({\n            showAddActivities: true\n        })\n    }\n\n    hideForm = () => {\n        this.setState({\n            showAddActivities: false\n        })\n    }\n\n    handleAdd = () => {\n        const { name, time } = this.state\n        this.props.onAdd(name, time)\n        this.hideForm()\n    }\n\n    handleNo = () => {\n        this.props.onNo()\n    }\n\n    render() {\n\n        const { showAddActivities } = this.state\n\n        if (showAddActivities === true) {\n            return (\n                <section className=\"add-activity-section\">\n                    <div>Title</div>\n                    <input className=\"add-activity-first-input\" onChange={this.handleNewActivityTitle}  type=\"text\"/>\n                    <div>Time (in minutes)</div>\n                    <input className=\"add-activity-last-input\" onChange={this.handleNewActivityTime} type=\"number\"/>\n                    <div><Button onClick={this.handleAdd}>Add Activity</Button></div>\n                </section>\n            )\n        } else {\n            return (\n                <section>\n                    <Button onClick={this.displayAddActivityInputClick}>Yes</Button>\n                    <Button onClick={this.handleNo}>No</Button>\n                </section>\n            )\n        }\n\n    }\n\n    \n\n\n}","import React from 'react'\nimport moment from 'moment'\nimport './Clock.css'\n\nexport default class Clock extends React.Component {\n\n    state = {\n        currentDay: moment().format(\"dd\"),\n        currentTime: this.timeNow,\n        currentHrs: this.timeNow,\n        currentMins: this.timeNow,\n        currentSecs: this.timeNow\n      }\n\n    timeNow = () => {\n      var hrs = moment().hour()\n      var mins = moment().minute()\n      var secs = moment().seconds()\n      console.log(`${hrs}:${mins}:${secs}`)\n      var time = `${hrs}:${mins}:${secs}`\n      var timeHrs = `${hrs}`\n      var timeMins = `${mins}`\n      var timeSecs = `${secs}`\n      this.setState({\n        currentTime: time,\n        currentHrs: timeHrs,\n        currentMins: timeMins,\n        currentSecs: timeSecs\n      })\n\n    }\n\n    componentDidMount() { // create the interval once component is mounted\n        this.update = setInterval(() => {\n            var hrs = moment().hour()\n            var mins = moment().minute()\n            var secs = moment().seconds()\n            var time = `${hrs.toString().padStart(2,'0')}:${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`\n            var timeHrs = hrs.toString().padStart(2,'0')\n            var timeMins = mins.toString().padStart(2,'0')\n            var timeSecs = secs.toString().padStart(2,'0')\n            \n            this.setState({\n                currentTime: time,\n                currentHrs: timeHrs,\n                currentMins: timeMins,\n                currentSecs: timeSecs\n            })\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.update);\n    }\n\n      render() {\n        const { currentDay, currentTime, currentHrs, currentMins, currentSecs } = this.state\n\n        return(\n            <section>\n                {/* <h5>{currentTime}</h5> */}\n\n                <div className=\"clock-container\">\n                    \n                <div className=\"clock-col\">\n                    <p className=\"clock-day clock-timer\"> {currentDay}\n                    </p>\n                    <p className=\"clock-label\">\n                    Day\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-hours clock-timer\"> {currentHrs}\n                    </p>\n                    <p className=\"clock-label\">\n                    Hours\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-minutes clock-timer\"> {currentMins}\n                    </p>\n                    <p className=\"clock-label\">\n                    Minutes\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-seconds clock-timer\"> {currentSecs}\n                    </p>\n                    <p className=\"clock-label\">\n                    Seconds\n                    </p>\n                </div>\n                </div>\n            </section>\n        )\n      }\n}\n\n","import React from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n// import logo from './logo.svg';\n// import './skeleton.css';\n// import './normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport './App.css';\n// import axios from 'axios';\nimport Activities from './Activities';\nimport AddActivities from './AddActivities';\nimport Clock from './Clock';\nimport moment from 'moment'\n\nclass MapContainer extends React.Component {\n  state = {\n    // showAddActivities: 'add-activity-hidden',\n    // showAddActivities: false,\n    startLocation: '',\n    finalDestination: '',\n    newActivityTitle: '',\n    newActivityTime: '',\n    travelTime: 0,\n    activities: [\n    ],\n    visibleStartLocation: '',\n    visibleFinalDestination: '',\n    hideAndDisplayStartAndEndLocation: 'hidden-class',\n    amountOfSleepWanted: 0,\n    sleepHrs: 0,\n    sleepMins: 0,\n    hideAndDisplaySleepAmount: 'hidden-class',\n    finalDestinationHrs: 0,\n    finalDestinationMins: 0,\n    whatTimeYouNeedToBeSomewhere: 0,\n    whatTimeYouNeedToBeSomewhereDisplay: '',\n    hideAndDisplayFinalDestTime: 'hidden-class',\n    hideAndDisplayBedTime: 'hidden-class',\n    timeForBed: '',\n    currentTime: [],\n    hideAndDisplaySectionContainer: 'section-container',\n    amountSleepSection: 'section-container-last',\n    whereNeedToBeSection: 'hidden-class',\n    timeNeedToBeAtFinalDest: 'hidden-class',\n    activitiesSection: 'hidden-class',\n    moreActivitiesSection: 'hidden-class',\n    calculateBedTimeSection: 'hidden-class'\n  }\n\n  handleAddTravelDestination = () => {\n    console.log('handle Add Travel Destination')\n    const {startLocation, finalDestination} = this.state\n\n    console.log(startLocation)\n    console.log(finalDestination)\n    const { google } = this.props\n    const service = new google.maps.DistanceMatrixService()\n    service.getDistanceMatrix(\n      {\n        origins: [startLocation],\n        destinations: [finalDestination],\n        travelMode: 'DRIVING',\n        region: 'AU'\n      },\n      (response, status) => {\n        // console.log('response', response)\n        // console.log('status', status)\n        // debugger\n        if (response.rows[0].elements[0].status === \"ZERO_RESULTS\") {\n          console.log('error')\n        } else if (response.rows[0].elements[0].duration.text.split(' ').length > 2) {\n          var travelDuration = (Number(response.rows[0].elements[0].duration.text.split(' ')[0]) * 60) + Number(response.rows[0].elements[0].duration.text.split(' ')[2])\n        } else if (response.rows[0].elements[0].status !== \"ZERO_RESULTS\") {\n          travelDuration = Number(response.rows[0].elements[0].duration.text.split(' ')[0])\n        } else {\n          console.log('error')\n        }\n        \n        this.setState({\n          travelTime: travelDuration,\n          visibleStartLocation: startLocation,\n          visibleFinalDestination: finalDestination,\n          hideAndDisplayStartAndEndLocation: 'visible-class',\n          whereNeedToBeSection: 'hidden-class',\n          timeNeedToBeAtFinalDest: 'section-container-last'\n        })\n      }\n    )\n  }\n\n  handleStartLocationChange = e => {\n    this.setState({\n      startLocation: e.target.value\n    })\n  }\n\n  handleFinalDestinationChange = e => {\n    this.setState({\n      finalDestination: e.target.value\n    })\n  }\n\n  handleNewActivityTitle = e => {\n    this.setState({\n      newActivityTitle: e.target.value\n    })\n  }\n\n  handleNewActivityTime = e => {\n    this.setState({\n      newActivityTime: e.target.value\n    })\n  }\n\n  addActivityClick = (name, time) => {\n    var timeToNumber = Number(time)\n    this.setState({\n      activities:  [...this.state.activities, {name: name, time: timeToNumber}],\n      activitiesSection: 'hidden-class',\n      moreActivitiesSection: 'section-container-last'\n    })\n  }\n\n  noActivityClick = () => {\n    console.log('no activity click')\n    this.setState({\n      activitiesSection: 'hidden-class',\n      moreActivitiesSection: 'hidden-class',\n      calculateBedTimeSection: 'section-container-last'\n    })\n  }\n\n  displayAddActivityInputClick = e => {\n    e.preventDefault()\n    const {showAddActivities} = this.state\n    if (showAddActivities === 'add-activity-hidden') {\n      this.setState({\n        showAddActivities: 'add-activity-display'\n      })\n    } else {\n      this.setState({\n        showAddActivities: 'add-activity-hidden'\n      })\n    }\n    \n  }\n\n  handleFigureoutTimeForBed = () => {\n    const { activities, travelTime, amountOfSleepWanted, whatTimeYouNeedToBeSomewhere, hideAndDisplaySectionContainer} = this.state\n    var activitiesTotalTime = activities.map( activity => activity.time ).reduce((accum, currentVal) => accum + currentVal, 0)\n\n    var activitiesAndTravelTime = activitiesTotalTime + travelTime\n\n    var timeYouHaveToBeAtAPlace = moment().set({'hour': 0, 'minute': whatTimeYouNeedToBeSomewhere, 'second': 0})\n    console.log(timeYouHaveToBeAtAPlace.format('LT'))\n\n    var wakeUpTime = timeYouHaveToBeAtAPlace.subtract(activitiesAndTravelTime, 'minutes')\n    console.log(wakeUpTime.format('LT'))\n\n    var gotToBedTime = wakeUpTime.subtract(amountOfSleepWanted, 'minute')\n    this.setState({\n      timeForBed: gotToBedTime.format('LT'),\n      hideAndDisplaySectionContainer: 'hidden-class',\n      hideAndDisplayBedTime: 'time-need-be-in-bed-time'\n    })\n    console.log(gotToBedTime.format('LT'))\n  }\n\n\n  handleSleepHrsChange = e => {\n    let sleepHrsToNumber = Number(e.target.value)\n    this.setState({\n      sleepHrs: sleepHrsToNumber\n    })\n  }\n\n  handleSleepMinsChange = e => {\n    let sleepMinsToNumber = Number(e.target.value)\n    this.setState({\n      sleepMins: sleepMinsToNumber\n    })\n  }\n\n  handleAmountOfSleep = () => {\n    const {sleepHrs, sleepMins} = this.state\n    let hrsAndMinsCombined = (sleepHrs * 60) + sleepMins\n    this.setState({\n      amountOfSleepWanted: hrsAndMinsCombined,\n      hideAndDisplaySleepAmount: 'visible-class',\n      amountSleepSection: 'hidden-class',\n      whereNeedToBeSection: 'section-container-last'\n    })\n  }\n\n  handleFinalDestinationHrsChange = e => {\n    let finalDestinationHrsToNumber = Number(e.target.value)\n    this.setState({\n      finalDestinationHrs: finalDestinationHrsToNumber\n    })\n  }\n\n  handleFinalDestinationMinsChange = e => {\n    let finalDestinationMinsToNumber = Number(e.target.value)\n    this.setState({\n      finalDestinationMins: finalDestinationMinsToNumber\n    })\n  }\n\n  handleArrivalTime = () => {\n    console.log('arrival time button working')\n    const {finalDestinationHrs, finalDestinationMins} = this.state\n    let finalDestHrsAndMinsCombined = (finalDestinationHrs * 60) + finalDestinationMins\n\n    var test = moment().set({'hour': finalDestinationHrs, 'minute': finalDestinationMins, 'second': 0})\n    console.log(test.format('LT'))\n\n    this.setState({\n      whatTimeYouNeedToBeSomewhere: finalDestHrsAndMinsCombined,\n      hideAndDisplayFinalDestTime: 'visible-class',\n      whatTimeYouNeedToBeSomewhereDisplay: test.format('LT'),\n      timeNeedToBeAtFinalDest: 'hidden-class',\n      activitiesSection: 'section-container-last'\n    })\n  }\n\n  render() {\n    const { activities, hideAndDisplayStartAndEndLocation, sleepHrs, sleepMins, hideAndDisplaySleepAmount, hideAndDisplayFinalDestTime, hideAndDisplayBedTime, timeForBed, whatTimeYouNeedToBeSomewhereDisplay, amountSleepSection, whereNeedToBeSection, timeNeedToBeAtFinalDest, activitiesSection, moreActivitiesSection, calculateBedTimeSection } = this.state\n\n    return (\n      <div className=\"App\">\n        <h1><Clock /></h1>\n        <div className=\"main-interactive-section\">\n          <div className=\"section-container\">\n            <div className=\"time-for-bed\">\n              <h1>What time to go to Bed?</h1>\n              <h2 className={hideAndDisplayBedTime}>You need to go to bed at {timeForBed}</h2>\n\n              <div className={hideAndDisplaySleepAmount}>Amount of sleep you want: {sleepHrs} hrs and {sleepMins} mins </div>\n\n              <div className={hideAndDisplayStartAndEndLocation}>Your start location: {this.state.visibleStartLocation}</div>\n              <div className={hideAndDisplayStartAndEndLocation}>Your final destination: {this.state.visibleFinalDestination}</div>\n\n              <div className={hideAndDisplayFinalDestTime}>Time you need to be somewhere: {whatTimeYouNeedToBeSomewhereDisplay}</div>\n              \n                { activities.map(activity => (\n                  <Activities data={activity} key={activity.name} />\n                ))\n                }\n            </div>\n          </div>\n          \n            \n          <div className={amountSleepSection}>\n            <div className=\"how-much-sleep-want\">\n              <div>How much sleep do you want tonight?</div>\n              <div><input onChange={this.handleSleepHrsChange} min=\"0\" type=\"number\"/>hours</div>\n              <div><input onChange={this.handleSleepMinsChange} min=\"0\" type=\"number\"/>minutes</div>\n            </div>\n              <Button onClick={this.handleAmountOfSleep}>Add amount of sleep</Button>\n          </div>\n            \n            <div className={whereNeedToBeSection}>\n              <div className=\"start-end-location\">\n              <div>Where do you need to be tomorrow?</div>\n                <div className=\"start-location\">\n                  <div>Your starting location</div>\n                  <input onChange={this.handleStartLocationChange}  type=\"text\"/>\n                </div>\n                <div className='final-dest'>\n                  <div>Your final destination</div>\n                  <input onChange={this.handleFinalDestinationChange} type=\"text\"/>\n                </div>\n                <div><Button onClick={this.handleAddTravelDestination}>Add travel destination</Button></div>\n              </div>\n            </div>\n\n            \n            <div className={timeNeedToBeAtFinalDest}>\n              <div className=\"time-at-final-dest\">\n                  <div className=\"time-at-final-dest-title\">What time do you need to be at your final destination?</div>\n                  <div className=\"time-at-final-dest-inputs\">\n                    <input onChange={this.handleFinalDestinationHrsChange} type=\"number\"/>\n                      <span>hours</span>\n                    <input onChange={this.handleFinalDestinationMinsChange} type=\"number\"/>\n                      <span>: minutes</span>\n                  </div>\n                  <Button onClick={this.handleArrivalTime}>Add time</Button>\n              </div>\n            </div>\n\n\n            \n            <div className={activitiesSection}>\n              <div className=\"add-activity-text\">Will you be doing any activities in the morning?</div>\n              <AddActivities  onAdd={this.addActivityClick} onNo={this.noActivityClick} />\n            </div>\n\n            <div className={moreActivitiesSection}>\n              <div className=\"add-activity-text\">Will you be doing any other activities in the morning?</div>\n              <AddActivities  onAdd={this.addActivityClick} onNo={this.noActivityClick} />\n            </div>\n            \n            <div className={calculateBedTimeSection}>\n              <Button onClick={this.handleFigureoutTimeForBed}>Calculate Time for Bed?</Button>\n            </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCha11ARLYwPGdsg7_RCac7mcfv9a8GwRM'\n})(MapContainer)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}