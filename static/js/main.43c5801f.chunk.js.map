{"version":3,"sources":["Activities.js","AddActivities.js","Clock.js","App.js","serviceWorker.js","index.js"],"names":["Activities","props","data","name","time","AddActivities","state","showAddActivities","handleNewActivityTitle","e","setState","target","value","handleNewActivityTime","displayAddActivityInputClick","hideForm","handleAdd","inputActivityTitle","inputActivityTime","onAdd","handleNo","onNo","this","className","onChange","ref","el","type","onClick","React","Component","Clock","currentDay","moment","format","currentTime","timeNow","currentHrs","currentMins","currentSecs","hrs","hour","mins","minute","secs","seconds","timeHrs","timeMins","timeSecs","update","setInterval","toString","padStart","clearInterval","initialState","startLocation","finalDestination","newActivityTitle","newActivityTime","travelTime","activities","visibleStartLocation","visibleFinalDestination","hideAndDisplayStartAndEndLocation","amountOfSleepWanted","sleepHrs","sleepMins","hideAndDisplaySleepAmount","finalDestinationHrs","finalDestinationMins","whatTimeYouNeedToBeSomewhere","whatTimeYouNeedToBeSomewhereDisplay","hideAndDisplayFinalDestTime","hideAndDisplayBedTime","hideAndDisplayWakeUpTime","timeForBed","timeToWakeUp","hideAndDisplaySectionContainer","amountSleepSection","travelSomwhereTomorrowQuestion","whereNeedToBeSection","timeNeedToBeAtFinalDest","activitiesSection","moreActivitiesSection","calculateBedTimeSection","resetPageBtnSection","selectedHrsTime","selectedMinsTime","selectedMeridiemTime","minutes","Array","keys","hours","slice","MapContainer","handleAddTravelDestination","google","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","region","response","status","rows","elements","handleTravelError","duration","text","split","length","travelDuration","Number","inputStartLocation","inputFinalDest","console","log","handleStartLocationChange","handleFinalDestinationChange","addActivityClick","timeToNumber","noActivityClick","preventDefault","handleFigureoutTimeForBed","activitiesAndTravelTime","map","activity","reduce","accum","currentVal","wakeUpTime","set","subtract","outOfBedTime","gotToBedTime","handleSleepHrsChange","sleepHrsToNumber","handleSleepMinsChange","sleepMinsToNumber","handleAmountOfSleep","inputHrs","inputMins","hrsAndMinsCombined","handleFinalDestinationHrsChange","finalDestinationHrsToNumber","handleFinalDestinationMinsChange","finalDestinationMinsToNumber","handleArrivalTime","selectHrs","selectMins","selectMerdiem","arrivalTime","finalDestHrsAndMinsCombined","timePrettyFormat","handleHrsTime","selectedHr","handleMinsTime","selectedMins","handleMeridiem","selectedMeridiem","resetPage","key","indexOf","min","placeholder","GoogleApiWrapper","apiKey","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43c5801f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Activities(props) {\n    return (\n            <div>{props.data.name} {props.data.time}</div>\n    )\n}","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport './AddActivities.css'\n\nexport default class AddActivities extends React.Component {\n\n    state = {\n        showAddActivities: false,\n        name: '',\n        time: '',\n      }\n\n    handleNewActivityTitle = e => {\n        this.setState({\n          name: e.target.value\n        })\n    }\n    \n    handleNewActivityTime = e => {\n        this.setState({\n            time: e.target.value\n        })\n    }\n    \n    displayAddActivityInputClick = e => {\n        this.setState({\n            showAddActivities: true\n        })\n    }\n\n    hideForm = () => {\n        this.setState({\n            showAddActivities: false\n        })\n    }\n\n    handleAdd = () => {\n        this.inputActivityTitle.value = \"\"\n        this.inputActivityTime.value = \"\"\n        const { name, time } = this.state\n        this.props.onAdd(name, time)\n        this.hideForm()\n    }\n\n    handleNo = () => {\n        this.props.onNo()\n    }\n\n    render() {\n\n        const { showAddActivities } = this.state\n\n        if (showAddActivities === true) {\n            return (\n                <section className=\"add-activity-section\">\n                    <div>Title</div>\n                    <input className=\"add-activity-first-input\" onChange={this.handleNewActivityTitle} ref={el => this.inputActivityTitle = el} type=\"text\"/>\n                    <div>Time (in minutes)</div>\n                    <input className=\"add-activity-last-input\" onChange={this.handleNewActivityTime} ref={el => this.inputActivityTime = el} type=\"number\"/>\n                    <div><Button onClick={this.handleAdd}>Add Activity</Button></div>\n                </section>\n            )\n        } else {\n            return (\n                <section>\n                    <Button onClick={this.displayAddActivityInputClick}>Yes</Button>\n                    <Button onClick={this.handleNo}>No</Button>\n                </section>\n            )\n        }\n\n    }\n\n    \n\n\n}","import React from 'react'\nimport moment from 'moment'\nimport './Clock.css'\n\nexport default class Clock extends React.Component {\n\n    state = {\n        currentDay: moment().format(\"dd\"),\n        currentTime: this.timeNow,\n        currentHrs: this.timeNow,\n        currentMins: this.timeNow,\n        currentSecs: this.timeNow\n      }\n\n    timeNow = () => {\n      var hrs = moment().hour()\n      var mins = moment().minute()\n      var secs = moment().seconds()\n      var time = `${hrs}:${mins}:${secs}`\n      var timeHrs = `${hrs}`\n      var timeMins = `${mins}`\n      var timeSecs = `${secs}`\n      this.setState({\n        currentTime: time,\n        currentHrs: timeHrs,\n        currentMins: timeMins,\n        currentSecs: timeSecs\n      })\n\n    }\n\n    componentDidMount() { // create the interval once component is mounted\n        this.update = setInterval(() => {\n            var hrs = moment().hour()\n            var mins = moment().minute()\n            var secs = moment().seconds()\n            var time = `${hrs.toString().padStart(2,'0')}:${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`\n            var timeHrs = hrs.toString().padStart(2,'0')\n            var timeMins = mins.toString().padStart(2,'0')\n            var timeSecs = secs.toString().padStart(2,'0')\n            \n            this.setState({\n                currentTime: time,\n                currentHrs: timeHrs,\n                currentMins: timeMins,\n                currentSecs: timeSecs\n            })\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.update);\n    }\n\n      render() {\n        const { currentDay, currentHrs, currentMins, currentSecs } = this.state\n\n        return(\n            <section>\n                {/* <h5>{currentTime}</h5> */}\n\n                <div className=\"clock-container\">\n                    \n                <div className=\"clock-col\">\n                    <p className=\"clock-day clock-timer\"> {currentDay}\n                    </p>\n                    <p className=\"clock-label\">\n                    Day\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-hours clock-timer\"> {currentHrs}\n                    </p>\n                    <p className=\"clock-label\">\n                    Hours\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-minutes clock-timer\"> {currentMins}\n                    </p>\n                    <p className=\"clock-label\">\n                    Minutes\n                    </p>\n                </div>\n                <div className=\"clock-col\">\n                    <p className=\"clock-seconds clock-timer\"> {currentSecs}\n                    </p>\n                    <p className=\"clock-label\">\n                    Seconds\n                    </p>\n                </div>\n                </div>\n            </section>\n        )\n      }\n}\n\n","import React from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n// import logo from './logo.svg';\n// import './skeleton.css';\n// import './normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport './App.css';\n// import axios from 'axios';\nimport Activities from './Activities';\nimport AddActivities from './AddActivities';\nimport Clock from './Clock';\nimport moment from 'moment';\n\n\nconst initialState = {\n  startLocation: '',\n  finalDestination: '',\n  newActivityTitle: '',\n  newActivityTime: '',\n  travelTime: 0,\n  activities: [\n  ],\n  visibleStartLocation: '',\n  visibleFinalDestination: '',\n  hideAndDisplayStartAndEndLocation: 'hidden-class',\n  amountOfSleepWanted: 0,\n  sleepHrs: 0,\n  sleepMins: 0,\n  hideAndDisplaySleepAmount: 'hidden-class',\n  finalDestinationHrs: 0,\n  finalDestinationMins: 0,\n  whatTimeYouNeedToBeSomewhere: 0,\n  whatTimeYouNeedToBeSomewhereDisplay: '',\n  hideAndDisplayFinalDestTime: 'hidden-class',\n  hideAndDisplayBedTime: 'hidden-class',\n  hideAndDisplayWakeUpTime: 'hidden-class',\n  timeForBed: '',\n  timeToWakeUp: '',\n  currentTime: [],\n  hideAndDisplaySectionContainer: 'section-container',\n  amountSleepSection: 'section-container-last',\n  travelSomwhereTomorrowQuestion: 'hidden-class',\n  whereNeedToBeSection: 'hidden-class',\n  timeNeedToBeAtFinalDest: 'hidden-class',\n  activitiesSection: 'hidden-class',\n  moreActivitiesSection: 'hidden-class',\n  calculateBedTimeSection: 'hidden-class',\n  resetPageBtnSection: 'hidden-class',\n  selectedHrsTime: 1,\n  selectedMinsTime: 0,\n  selectedMeridiemTime: 'AM',\n  minutes: [...Array(60).keys()],\n  hours: [...Array(13).keys()].slice(1),\n}\n\nclass MapContainer extends React.Component {\n  state = initialState;\n\n  handleAddTravelDestination = () => {\n    const {startLocation, finalDestination} = this.state\n\n    // console.log(startLocation)\n    // console.log(finalDestination)\n    const { google } = this.props\n    const service = new google.maps.DistanceMatrixService()\n    service.getDistanceMatrix(\n      {\n        origins: [startLocation],\n        destinations: [finalDestination],\n        travelMode: 'DRIVING',\n        region: 'AU'\n      },\n      (response, status) => {\n        // console.log('response', response)\n        // console.log('status', status)\n        // debugger\n        if (response.rows[0].elements[0].status === \"ZERO_RESULTS\") {\n          // console.log('error')\n          this.handleTravelError()\n        } else if (response.rows[0].elements[0].duration.text.split(' ').length > 2) {\n          var travelDuration = (Number(response.rows[0].elements[0].duration.text.split(' ')[0]) * 60) + Number(response.rows[0].elements[0].duration.text.split(' ')[2])\n        } else if (response.rows[0].elements[0].status !== \"ZERO_RESULTS\") {\n          travelDuration = Number(response.rows[0].elements[0].duration.text.split(' ')[0])\n        } else {\n          // console.log('error')\n        }\n        \n        this.setState({\n          travelTime: travelDuration,\n          visibleStartLocation: startLocation,\n          visibleFinalDestination: finalDestination,\n          hideAndDisplayStartAndEndLocation: 'visible-class',\n          whereNeedToBeSection: 'hidden-class',\n          timeNeedToBeAtFinalDest: 'section-container-last'\n        })\n      }\n    )\n    this.inputStartLocation.value = \"\"\n    this.inputFinalDest.value = \"\"\n  }\n\n  handleTravelError = () => {\n    console.log('handle travel error')\n  }\n\n  handleStartLocationChange = e => {\n    this.setState({\n      startLocation: e.target.value\n    })\n  }\n\n  handleFinalDestinationChange = e => {\n    this.setState({\n      finalDestination: e.target.value\n    })\n  }\n\n  handleNewActivityTitle = e => {\n    this.setState({\n      newActivityTitle: e.target.value\n    })\n  }\n\n  handleNewActivityTime = e => {\n    this.setState({\n      newActivityTime: e.target.value\n    })\n  }\n\n  addActivityClick = (name, time) => {\n    // this.inputActivityTitle.value = \"\"\n    // this.inputActivityTime.value = \"\"\n    var timeToNumber = Number(time)\n    this.setState({\n      activities:  [...this.state.activities, {name: name, time: timeToNumber}],\n      activitiesSection: 'hidden-class',\n      moreActivitiesSection: 'section-container-last'\n    })\n  }\n\n  noActivityClick = () => {\n    this.setState({\n      activitiesSection: 'hidden-class',\n      moreActivitiesSection: 'hidden-class',\n      calculateBedTimeSection: 'section-container-last'\n    })\n  }\n\n  displayAddActivityInputClick = e => {\n    e.preventDefault()\n    const {showAddActivities} = this.state\n    if (showAddActivities === 'add-activity-hidden') {\n      this.setState({\n        showAddActivities: 'add-activity-display'\n      })\n    } else {\n      this.setState({\n        showAddActivities: 'add-activity-hidden'\n      })\n    }\n    \n  }\n\n  handleFigureoutTimeForBed = () => {\n    const { activities, travelTime, amountOfSleepWanted, whatTimeYouNeedToBeSomewhere, hideAndDisplaySectionContainer} = this.state\n    var activitiesTotalTime = activities.map( activity => activity.time ).reduce((accum, currentVal) => accum + currentVal, 0)\n\n    var activitiesAndTravelTime = activitiesTotalTime + travelTime\n\n    var timeYouHaveToBeAtAPlace = moment().set({'hour': 0, 'minute': whatTimeYouNeedToBeSomewhere, 'second': 0})\n    // console.log(timeYouHaveToBeAtAPlace.format('LT'))\n\n    var wakeUpTime = timeYouHaveToBeAtAPlace.subtract(activitiesAndTravelTime, 'minutes')\n    // console.log(wakeUpTime.format('LT'))\n    var outOfBedTime = wakeUpTime.format('LT')\n\n    var gotToBedTime = wakeUpTime.subtract(amountOfSleepWanted, 'minute')\n    \n    this.setState({\n      timeForBed: gotToBedTime.format('LT'),\n      timeToWakeUp: outOfBedTime,\n      hideAndDisplaySectionContainer: 'hidden-class',\n      hideAndDisplayBedTime: 'time-need-be-in-bed',\n      hideAndDisplayWakeUpTime: 'time-need-wake-up',\n      calculateBedTimeSection: 'hidden-class',\n      resetPageBtnSection: 'section-container-last'\n    })\n    // console.log(gotToBedTime.format('LT'))\n\n  }\n\n\n  handleSleepHrsChange = e => {\n    let sleepHrsToNumber = Number(e.target.value)\n    this.setState({\n      sleepHrs: sleepHrsToNumber\n    })\n  }\n\n  handleSleepMinsChange = e => {\n    let sleepMinsToNumber = Number(e.target.value)\n    this.setState({\n      sleepMins: sleepMinsToNumber\n    })\n  }\n\n  handleAmountOfSleep = () => {\n    this.inputHrs.value = \"\"\n    this.inputMins.value = \"\"\n    const {sleepHrs, sleepMins} = this.state\n    let hrsAndMinsCombined = (sleepHrs * 60) + sleepMins\n    this.setState({\n      amountOfSleepWanted: hrsAndMinsCombined,\n      hideAndDisplaySleepAmount: 'visible-class',\n      amountSleepSection: 'hidden-class',\n      whereNeedToBeSection: 'section-container-last',\n      // travelSomwhereTomorrowQuestion: 'section-container-last'\n    })\n  }\n\n  handleFinalDestinationHrsChange = e => {\n    let finalDestinationHrsToNumber = Number(e.target.value)\n    this.setState({\n      finalDestinationHrs: finalDestinationHrsToNumber\n    })\n  }\n\n  handleFinalDestinationMinsChange = e => {\n    let finalDestinationMinsToNumber = Number(e.target.value)\n    this.setState({\n      finalDestinationMins: finalDestinationMinsToNumber\n    })\n  }\n\n  handleArrivalTime = () => {\n    this.selectHrs.value = 1\n    this.selectMins.value = 0\n    this.selectMerdiem.value = 'AM'\n    const {finalDestinationHrs, finalDestinationMins, selectedHrsTime, selectedMinsTime, selectedMeridiemTime} = this.state\n\n    if (selectedMeridiemTime === 'AM' && selectedHrsTime === 12) {\n      let hrs = selectedHrsTime - 12\n      let mins = selectedMinsTime\n      this.arrivalTime(hrs, mins)\n    } else if (selectedMeridiemTime === 'PM' && selectedHrsTime !== 12) {\n      let hrs = selectedHrsTime + 12\n      let mins = selectedMinsTime\n      this.arrivalTime(hrs, mins)\n    } else {\n      let hrs = selectedHrsTime\n      let mins = selectedMinsTime\n      this.arrivalTime(hrs, mins)\n      }\n  }\n\n  arrivalTime = (hrs, mins) => {\n      let finalDestHrsAndMinsCombined = (hrs * 60) + mins\n      var timePrettyFormat = moment().set({'hour': hrs, 'minute': mins, 'second': 0})\n\n      this.setState({\n        whatTimeYouNeedToBeSomewhere: finalDestHrsAndMinsCombined,\n        hideAndDisplayFinalDestTime: 'visible-class',\n        whatTimeYouNeedToBeSomewhereDisplay: timePrettyFormat.format('LT'),\n        timeNeedToBeAtFinalDest: 'hidden-class',\n        activitiesSection: 'section-container-last'\n      })\n  }\n\n  handleHrsTime = e => {\n    let selectedHr = Number(e.target.value)\n    this.setState({\n      selectedHrsTime: selectedHr\n    })\n  }\n\n  handleMinsTime = e => {\n    let selectedMins = Number(e.target.value)\n    this.setState({\n      selectedMinsTime: selectedMins\n    })\n  }\n\n  handleMeridiem = e => {\n    let selectedMeridiem = e.target.value\n    this.setState({\n      selectedMeridiemTime: selectedMeridiem\n    })\n  }\n\n  // handleYesTravel = () => {\n  //   this.setState({\n  //     travelSomwhereTomorrowQuestion: 'hidden-class',\n  //     whereNeedToBeSection: 'section-container-last',\n  //   })\n  // }\n\n  // handleNoTravel = () => {\n  //   this.setState({\n  //     travelSomwhereTomorrowQuestion: 'hidden-class',\n  //     activitiesSection: 'section-container-last',\n  //   })\n  // }\n\n  resetPage = () => {\n    this.setState(initialState)\n    // window.location.reload();\n  }\n\n  render() {\n    const { activities, hideAndDisplayStartAndEndLocation, sleepHrs, sleepMins, hideAndDisplaySleepAmount, hideAndDisplayFinalDestTime, hideAndDisplayBedTime, hideAndDisplayWakeUpTime, timeForBed, timeToWakeUp, whatTimeYouNeedToBeSomewhereDisplay, amountSleepSection, whereNeedToBeSection, timeNeedToBeAtFinalDest, activitiesSection, moreActivitiesSection, calculateBedTimeSection, resetPageBtnSection, travelSomwhereTomorrowQuestion} = this.state\n\n    return (\n      <div className=\"App\">\n        <h1><Clock /></h1>\n        <div className=\"main-interactive-section\">\n          <div className=\"section-container\">\n            <div className=\"time-for-bed\">\n              <h1>What time to go to Bed?</h1>\n              <h2 className={hideAndDisplayBedTime}>You need to go to bed at {timeForBed}</h2>\n              <h2 className={hideAndDisplayWakeUpTime}>And wake up at {timeToWakeUp}</h2>\n\n              <div className={hideAndDisplaySleepAmount}>Amount of sleep you want: {sleepHrs} hrs and {sleepMins} mins </div>\n\n              <div className={hideAndDisplayStartAndEndLocation}>Your start location: {this.state.visibleStartLocation}</div>\n              <div className={hideAndDisplayStartAndEndLocation}>Your final destination: {this.state.visibleFinalDestination}</div>\n\n              <div className={hideAndDisplayFinalDestTime}>Time you need to be somewhere: {whatTimeYouNeedToBeSomewhereDisplay}</div>\n              \n                {activities.map(activity => (\n                  <Activities data={activity} key={activities.indexOf(activity)} />\n                ))\n                }\n              \n            </div>\n          </div>\n          \n            \n          <div className={amountSleepSection}>\n            <div className=\"how-much-sleep-want\">\n              <div>How much sleep do you want tonight?</div>\n\n              <div><input onChange={this.handleSleepHrsChange} ref={el => this.inputHrs = el} min=\"0\" type=\"number\"/>hours</div>\n              <div><input onChange={this.handleSleepMinsChange} ref={el => this.inputMins = el} min=\"0\" type=\"number\"/>minutes</div>\n            </div>\n              <Button onClick={this.handleAmountOfSleep}>Add amount of sleep</Button>\n          </div>\n\n          {/* <div className={travelSomwhereTomorrowQuestion}>\n              <div className=\"travel-somwhere-tomorrow-question\">Are you traveling somwhere tomorrow?</div>\n              <Button onClick={this.handleYesTravel}>Yes</Button>\n              <Button onClick={this.handleNoTravel}>No</Button>\n          </div> */}\n            \n            <div className={whereNeedToBeSection}>\n              <div className=\"start-end-location\">\n              <div>Where do you need to be tomorrow?</div>\n                <div className=\"start-location\">\n                  <div>Your starting location</div>\n                  <input onChange={this.handleStartLocationChange} ref={el => this.inputStartLocation = el} placeholder=\"enter address or suburb\" type=\"text\"/>\n                </div>\n                <div className='final-dest'>\n                  <div>Your final destination&nbsp;</div>\n                  <input onChange={this.handleFinalDestinationChange} ref={el => this.inputFinalDest = el} placeholder=\"enter address or suburb\" type=\"text\"/>\n                </div>\n                <div><Button onClick={this.handleAddTravelDestination}>Add travel destination</Button></div>\n              </div>\n            </div>\n            \n            <div className={timeNeedToBeAtFinalDest}>\n              <div className=\"time-at-final-dest\">\n                  <div className=\"time-at-final-dest-title\">What time do you need to be at your final destination?</div>\n\n                  <select onChange={this.handleHrsTime} ref={el => this.selectHrs = el}>\n                    {this.state.hours.map(hour =>( \n                      <option key={hour} value={hour}>\n                        {hour.toString().padStart(2,'0')}\n                      </option>\n                    ))}\n                  </select>\n                  <span> : </span>\n                  <select onChange={this.handleMinsTime} ref={el => this.selectMins = el}>\n                    {this.state.minutes.map(minute =>(\n                      <option key={minute} value={minute}>\n                        {minute.toString().padStart(2,'0')}\n                      </option>\n                    ))}\n                  </select>\n\n                  <select onChange={this.handleMeridiem} ref={el => this.selectMerdiem = el}>\n                    <option value=\"AM\">AM</option>\n                    <option value=\"PM\">PM</option>\n                  </select>\n                  <div>\n                    <Button onClick={this.handleArrivalTime}>Add time</Button>\n                  </div>\n              </div>\n            </div>\n            \n            <div className={activitiesSection}>\n              <div className=\"add-activity-text\">Will you be doing any activities in the morning?</div>\n              <AddActivities  onAdd={this.addActivityClick} onNo={this.noActivityClick} />\n            </div>\n\n            <div className={moreActivitiesSection}>\n              <div className=\"add-activity-text\">Will you be doing any other activities in the morning?</div>\n              <AddActivities  onAdd={this.addActivityClick} onNo={this.noActivityClick} />\n            </div>\n            \n            <div className={calculateBedTimeSection}>\n              <Button onClick={this.handleFigureoutTimeForBed}>Calculate Time for Bed?</Button>\n            </div>\n            <div className={resetPageBtnSection}>\n              <Button onClick={this.resetPage}>Calculate again</Button>\n            </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCha11ARLYwPGdsg7_RCac7mcfv9a8GwRM'\n})(MapContainer)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}